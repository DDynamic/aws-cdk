import * as cdk from '@aws-cdk/core';
import { Construct } from 'constructs';
import { CfnObservabilityConfiguration } from './apprunner.generated';


/**
 * The implementation provider for tracing App Runner services.
 */
export enum Vendor {
  /**
   * None
   */
  NONE = 'NONE',

  /**
   * AWS X-Ray
   */
  AWSXRAY = 'AWSXRAY'
}

/**
 * Properties of the AppRunner Observability Configuration
 */
export interface ObservabilityConfigurationProps {
  /**
   * The implementation provider for tracing App Runner services.
   *
   * @default Vendor.None
   */
  readonly traceConfiguration?: Vendor;

  /**
    * The name for the Observability Configuration.
    *
    * @default - a name generated by CloudFormation
    */
  readonly observabilityConfigurationName?: string;
}

/**
 * Attributes for the Observability Configuration
 */
export interface ObservabilityConfigurationAttributes {
  /**
   * The ARN of the Observability Configuration.
   */
  readonly observabilityConfigurationArn: string;

  /**
   * The name of the Observability Configuration.
   */
  readonly observabilityConfigurationName: string;

  /**
   * The revision of the Observability Configuration.
   */
  readonly observabilityConfigurationRevision: number;
}

/**
 * Represents the AppRunner Observability Configuration
 */
export interface IObservabilityConfiguration extends cdk.IResource {
  /**
   * The ARN of the Observability Configuration.
   * @attribute
   */
  readonly observabilityConfigurationArn: string;

  /**
   * The Name of the Observability Configuration.
   * @attribute
   */
  readonly observabilityConfigurationName: string;

  /**
   * The revision of the Observability Configuration.
   * @attribute
   */
  readonly observabilityConfigurationRevision: number;
}

/**
 * The App Runner Observability Configuration
 *
 * @resource AWS::AppRunner::ObservabilityConfiguration
 */
export class ObservabilityConfiguration extends cdk.Resource implements IObservabilityConfiguration {
  /**
   * Import from VPC connector attributes.
   */
  // eslint-disable-next-line max-len
  public static fromObservabilityConfigurationAttributes(scope: Construct, id: string, attrs: ObservabilityConfigurationAttributes): IObservabilityConfiguration {
    class Import extends cdk.Resource {
      public readonly observabilityConfigurationArn = attrs.observabilityConfigurationArn
      public readonly observabilityConfigurationName = attrs.observabilityConfigurationName
      public readonly observabilityConfigurationRevision = attrs.observabilityConfigurationRevision
    }

    return new Import(scope, id);
  }

  /**
   * rue for the configuration with the revision revision among all configurations that share the same name.
   * @attribute
   */
  readonly latest: cdk.IResolvable;

  /**
    * The ARN of the Observability Configuration.
    * @attribute
    */
  readonly observabilityConfigurationArn: string;

  /**
    * The name of the Observability Configuration.
    * @attribute
    */
  readonly observabilityConfigurationName: string;

  /**
   * The revision of the Observability Configuration.
   * @attribute
   */
  readonly observabilityConfigurationRevision: number;

  public constructor(scope: Construct, id: string, props?: ObservabilityConfigurationProps) {
    super(scope, id, {
      physicalName: props?.observabilityConfigurationName,
    });

    const resource = new CfnObservabilityConfiguration(this, 'Resource', {
      observabilityConfigurationName: this.physicalName,
      ...(props?.traceConfiguration && props.traceConfiguration != Vendor.NONE ? { traceConfiguration: { vendor: props?.traceConfiguration } } : {}),
    });

    this.latest = resource.attrLatest;
    this.observabilityConfigurationArn = resource.attrObservabilityConfigurationArn;
    this.observabilityConfigurationName = resource.ref;
    this.observabilityConfigurationRevision = resource.attrObservabilityConfigurationRevision;
  }
}